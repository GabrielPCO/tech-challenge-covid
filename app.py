# Libs

import pandas as pd
import time

# libs gr√°ficas
import matplotlib.pyplot as plt

# Streamlit
import streamlit as st
import streamlit.components.v1 as components

# Configurando a p√°gina
st.set_page_config(
    page_title="Tech-Challenge",
    page_icon="üíâ",
    layout="centered",
    initial_sidebar_state="auto",
    menu_items={
        'About': "Projeto criado para o *tech-challenge* do curso de p√≥s-gradua√ß√£o da FIAP/Alura."
    }
)

# Fun√ß√£o para a leitura da base de dados
@st.cache_data
def read_csv_file(file):
    return pd.read_csv(file)

# Titulo de P√°gina
st.title('An√°lise de dados: explorando dados da Pesquisa Nacional por Amostra de Domic√≠lios (PNAD) COVID19 realizada no ano de 2020')

# C√≥digo para alinhar imagens expandidas no centro da tela e justificar textos
st.markdown(
    """
    <style>
        body {text-align: justify}
        button[title^=Exit]+div [data-testid=stImage]{
            text-align: center;
            display: block;
            margin-left: auto;
            margin-right: auto;
            width: 100%;
        }
    </style>
    """, unsafe_allow_html=True
)

# Carregamento de imagens por cach
@st.cache_data
def load_img(img):
    return plt.imread(img)

# Layout do aplicativo
tab0, tab1, tab2, tab3, tab4 = st.tabs(["üî∑Introdu√ß√£o",
                                        "üåêBase de Dados",
                                        "üìùPesquisa",
                                        "üí°Conclus√µes",
                                        "üìëRefer√™ncias"])

# Separando as Tabs
with tab0:
    '''
    ## Explorando dados da Pesquisa Nacional por Amostra de Domic√≠lios COVID19 de 2020

    Links importantes:

    [covid19.ibge.gov.br/pnad-covid](https://covid19.ibge.gov.br/pnad-covid/) - Pesquisa Nacional por Amostra de Domic√≠lios (PNAD COVID19)

    [ibge.gov.br](https://www.ibge.gov.br/) - Instituto Brasileiro de Geografia e Estat√≠stica (IBGE)

    Links dos integrantes do projeto:

    [github.com/GabrielPCO](https://github.com/GabrielPCO/tech-challenge-ml) - Github Gabriel Oliveira

    [github.com/jackson-simionato](https://github.com/jackson-simionato) - Github Jackson Simionato

    gabrielpcoliveira@gmail.com - Email Gabriel Oliveira

    simionato.jackson@gmail.com - Email Jackson Simionato

    haendelf@hotmail.com - Email Haendel Oliveira

    '''
    st.divider()
    '''
    
    ## Resumo

    A Pesquisa Nacional por Amostra de Domic√≠lios (PNAD COVID19) objetiva estimar o n√∫mero de pessoas com sintomas referidos associados √† s√≠ndrome gripal e monitorar os impactos da pandemia da COVID-19 no mercado de trabalho brasileiro.

    A coleta da PNAD COVID19 teve in√≠cio em 4 de maio de 2020, com entrevistas realizadas por telefone em, aproximadamente, 48 mil domic√≠lios por semana, totalizando cerca de 193 mil domic√≠lios por m√™s, em todo o Territ√≥rio Nacional. A amostra √© fixa, ou seja, os domic√≠lios entrevistados no primeiro m√™s de coleta de dados permanecer√£o na amostra nos meses subsequentes, at√© o fim da pesquisa.

    O question√°rio se divide em duas partes, sendo uma direcionada a quest√µes de sa√∫de, especificamente sobre sintomas associados √† s√≠ndrome gripal e outra, a quest√µes de trabalho. Nas quest√µes de sa√∫de, investiga-se a ocorr√™ncia de alguns dos principais sintomas da COVID19 no per√≠odo de refer√™ncia da pesquisa, considerando-se todos os moradores do domic√≠lio. Para aqueles que apresentaram algum sintoma, perguntam-se quais as provid√™ncias tomadas para alivio dos sintomas; se buscaram por atendimento m√©dico devido a esses sintomas; e o tipo de estabelecimento de sa√∫de procurado. Nas quest√µes de trabalho, busca-se classificar a popula√ß√£o em idade de trabalhar nas seguintes categorias: ocupados, desocupados e pessoas fora da for√ßa de trabalho. Investiga-se, ainda, os seguintes aspectos: ocupa√ß√£o e atividade; afastamento do trabalho e o motivo do afastamento; exerc√≠cio de trabalho remoto; busca por trabalho; motivo por n√£o ter procurado trabalho; horas semanais efetivamente e habitualmente trabalhadas; assim como o rendimento efetivo e habitual do trabalho. Por fim, visando compor o rendimento domiciliar, pergunta-se se algum morador recebeu outros rendimentos n√£o oriundos do trabalho, tais como: aposentadoria, BPC-LOAS, Bolsa Fam√≠lia, algum aux√≠lio emergencial relacionado √† COVID, seguro desemprego, aluguel e outros. Cabe ressaltar que a PNAD COVID19 √© uma pesquisa com instrumento din√¢mico de coleta das informa√ß√µes; portanto, o question√°rio est√° sujeito a altera√ß√µes ao longo do per√≠odo de sua aplica√ß√£o.

    A pesquisa prev√™ divulga√ß√µes semanais para alguns indicadores, em n√≠vel Brasil, e divulga√ß√µes mensais para um conjunto mais amplo de indicadores, por Unidades da Federa√ß√£o.

    Os resultados da PNAD COVID19 s√£o pioneiros no sentido de constitu√≠rem a primeira divulga√ß√£o de Estat√≠sticas Experimentais elaboradas pelo IBGE, as quais est√£o alinhadas com a estrat√©gia de moderniza√ß√£o do Instituto e permitem a amplia√ß√£o das ofertas de informa√ß√£o para atender √†s necessidades de seus usu√°rios.
    
    
    Neste documento iremos analisar dados da PNAD COVID19 realizada no ano de 2020 a fim de compreender melhor como foi o comportamento da popula√ß√£o na √©poca da pandemia.

    Os t√≥picos foram divididos em tr√™s categorias principais: base de dados, pesquisa e conclus√µes. Cada categoria ser√° tratada e mais aprofundada em sua respectiva aba dentro desse documento.
    '''
    st.divider()
    '''

    ## Observa√ß√£o

    Os demais dados, DataFrames e outras an√°lises mais aprofundadas podem ser encontradas na p√°gina de Github dos integrantes do grupo referenciadas no in√≠cio desse documento.
    '''
with tab1:
    '''

    ## Sele√ß√£o dos dados

    Para a nossa an√°lise, decidimos selecionar dados de tr√™s meses diferentes (setembro, outubro e novembro) dispostos no sistema de divulga√ß√£o da PNAD no site do IBGE.
    
    Selecionamos ent√£o os microdados apontados na figura abaixo.
    '''

    img_1 = load_img('Assets/Imagens/microdados.jpg')
    st.image(img_1)
    
    '''

    Os microdados consistem no menor n√≠vel de desagrega√ß√£o dos dados de uma pesquisa, retratando, sob a forma de c√≥digos num√©ricos, o conte√∫do dos question√°rios, preservado o sigilo das informa√ß√µes. Desse modo, os microdados apresentam um formato ideal para o analista de dados manipular e criar suas pr√≥prias tabelas e gr√°ficos.
    '''
    st.divider()
    '''

    ## Dicion√°rio de dados

    Utilizamos ent√£o os respectivos dicion√°rios de dados da PNAD para traduzir os microdados selecionados.
    '''

    img_2 = load_img('Assets/Imagens/dicionarios.jpg')
    st.image(img_2)

    st.divider()
    '''

    ## Cria√ß√£o de tabela em banco de dados relacional

    Para a nossa an√°lise utilizamos uma quantidade relativamente massiva de dados. Desse modo, ser√° necess√°rio aplicar algumas t√©cnicas especiais para o manuseio dos dados.

    Para facilitar a manipula√ß√£o dos dados, decidimos criar uma tabela em banco de dados relacional para armazenar nosso dados.
    
    Escolhemos o sistema gerenciador de banco de dados PostgresSQL.
    '''
    
    img_3 = load_img('Assets/Imagens/postgres01.jpg')
    st.image(img_3)

    st.divider()
    '''

    ## Consolida√ß√£o dos dados

    Como as vari√°ves que utilizaremos como nossas colunas s√£o equivalente entre os diferentes set de dados, podemos consolidar esses dados em uma mesma tabela.

    Para tal, decidimos utilizar o software KNIME que √© uma plataforma livre e de c√≥digo aberto de an√°lise de dados, constru√ß√£o de relat√≥rios e integra√ß√£o de dados. Desse modo, o processo de consolida√ß√£o ser√° mais r√°pido e eficiente.

    
    Utilizamos os seguintes passos para a consolida√ß√£o e inser√ß√£o no banco de dados:
    
    1. Leitura dos tr√™s arquivos .csv

    2. Consolida√ß√£o da tabela

    3. Acesso ao banco de dados Postegres

    4. Inser√ß√£o dos dados

    
    '''

    img_4 = load_img('Assets/Imagens/knime.jpg')
    st.image(img_4)

    '''

    Em seguida, visualizamos e confirmamos a altera√ß√£o da tabela no banco de dados
    '''

    img_5 = load_img('Assets/Imagens/postgres02.jpg')
    st.image(img_5)

    st.divider()
with tab2:
    '''

    ## Pesquisa Nacional por Amostra de Domic√≠lios

    Como descrito anteriormente, foram obtidos dados de cerca de 193 mil domic√≠lios por m√™s de pesquisa.
    
    O question√°rio foi dividido em partes de modo que em nosso trabalho analisaremos alguma das quest√µes em tr√™s categorias diferentes, sendo elas: caracter√≠sticas cl√≠nicas dos sintomas, caracter√≠sticas da popula√ß√£o e caracter√≠sticas econ√¥micas da sociedade. 
    '''
    tab2_01, tab2_02, tab2_03 = st.tabs(["üå°Ô∏èSintomas",
                                         "üë•Popula√ß√£o",
                                         "üèòÔ∏èSociedade"])
    with tab2_01:
        '''

        ## Evolu√ß√£o dos sintomas de covid-19

        '''
        with st.expander("An√°lise Sintoma 01", expanded=False):
            '''

            ## An√°lise Sintoma 01

            Utilizamos os dados de pesquisa dos tr√™s meses para avaliar a evolu√ß√£o do sintoma de febre, tosse e dor no peito nos estados brasileiros ao longo do tempo.

            Quest√µes: 

            1. Na semana passada teve febre?

            2. Na semana passada teve tosse?

            3. Na semana passada teve dor no peito?

            Apenas casos nos quais a resposta foi sim para as tr√™s perguntas foram adicionados ao gr√°fico.

            '''
            if st.button("Programa√ß√£o Sintoma 01", type="secondary"):
                '''

                ### SQL
                ```sql
                SELECT mes, uf, b0011, b0012, b0016, COUNT(b0011) AS "febre_tosse_dor_peito"
                FROM dbo.pnad2020_month
                WHERE b0011 = '1' AND b0012 = '1' AND b0016 = '1'
                GROUP BY
                mes, uf, b0011, b0012, b0016
                ORDER BY
                mes DESC, febre_tosse_dor_peito DESC
                ```

                ### Python
                ```python
                fig_2 = px.choropleth_mapbox(casos_de_febre,
                                           geojson = geo_json_br,
                                           locations='uf',
                                           featureidkey = 'id',
                                           color = 'febre_tosse_dor_peito',
                                           animation_frame = 'mes',
                                           hover_name = 'uf',
                                           hover_data = ['febre_tosse_dor_peito'],
                                           title = 'Casos de febre, tosse e dor no peito no Brasil entre Setembro a Novembro de 2020',
                                           color_continuous_scale='Viridis',
                                           mapbox_style = 'carto-positron',
                                           center = {'lat':-14.654012, 'lon': -56.289339},
                                           zoom = 3,
                                           opacity = 0.9, )
                fig_2.update_layout(coloraxis_colorbar_title_text = 'N√∫mero de Casos', title_x=0.5)
                fig_2.update_geos(fitbounds = 'locations', visible = False)
                plotly.offline.plot(fig_2, filename = 'br_mapa_casos_febre.html', auto_play=False)
                fig_2.show()
                ```
                '''

        if st.button("Carregar Gr√°fico Sintoma 01", type="primary"):
            with st.spinner("Carregando o gr√°fico. Aguarde..."):
                src = "https://cryptohub.com.br/DataFrame/br_mapa_casos_febre.html"
                components.iframe(src, width = 700, height = 800, scrolling = False)
                time.sleep(5)
            '''
            
            ## An√°lise

            Pelo gr√°fico, podemos notar que houve uma evolu√ß√£o da quantidade de pessoas que afirmaram ter febre, tosse e dor no peito na semana passada a data da pesquisa. De setembro para outubro podemos ver uma evolu√ß√£o maior do sintoma no norte do pa√≠s. De outubro para novembro a evolu√ß√£o √© mais vis√≠vel no sul e sudoeste.
            
            '''
        st.divider()
    with tab2_02:
        '''

        ## Dados da popula√ß√£o
        '''
        with st.expander("An√°lise Popula√ß√£o 01", expanded=False):
            '''

            ### Ditribui√ß√£o da popula√ß√£o da pesquisa por situa√ß√£o

            Plotamos os dados de domic√≠lio da popula√ß√£o de entrevistados nos tr√™s meses avaliados, separando entre situa√ß√£o urbana e rural.

            Quest√£o: Situa√ß√£o do domic√≠lio

            '''
            if st.button("Programa√ß√£o Popula√ß√£o 01", type="secondary"):
                '''
                
                ### SQL
                ```sql
                SELECT uf, v1022, COUNT(case v1022 when '1' then 1 else null end) AS "urbana", COUNT(case v1022 when '2' then 1 else null end) AS "rural", COUNT(v1022) AS "total"
                FROM dbo.pnad2020_month
                GROUP BY
                uf, v1022
                ORDER BY
                total DESC
                ```

                ### Python
                ```python
                fig_3 = px.bar(df_04_final, x="uf", y="total_por_situacao", color="situacao", title="Ditribui√ß√£o da popula√ß√£o da pesquisa por situa√ß√£o",
                            labels=dict(uf="Estado", total_por_situacao="N¬∫ de entrevistados", situacao="Situa√ß√£o"))
                fig_3.update_layout(title_x=0.5)
                plotly.offline.plot(fig_3, filename = 'br_distribuicao_populacao.html', auto_play=False, auto_open=False)
                fig_3.show()
                ```
                '''
        if st.button("Carregar Gr√°fico Popula√ß√£o 01", type="primary"):
            with st.spinner("Carregando o gr√°fico. Aguarde..."):
                src = "https://cryptohub.com.br/DataFrame/br_distribuicao_populacao.html"
                components.iframe(src, width = 700, height = 700, scrolling = False)
                time.sleep(5)
            '''
            
            ## An√°lise

            Pelo gr√°fico, podemos notar que a maioria dos entrevistados est√° em situa√ß√£o de domic√≠lio urbano, sendo a maioria dos estados de Minas Gerais, S√£o Paulo e Rio de Janeiro.

            '''
        st.divider()
    with tab2_03:
        '''

        ## Dados sociais e econ√¥micos
        '''
        with st.expander("An√°lise Social 01", expanded=False):
            '''

            ### N√∫mero de entrevistados em diferentes faixas de aluguel por estado

            Selecionamos os cinco principais estados por faixa de aluguel dos entrevistados.

            Quest√£o: N√∫mero da faixa do aluguel pago

            '''
            if st.button("Programa√ß√£o Social 01", type="secondary"):
                '''
                
                ### SQL
                ```sql
                SELECT uf, f0022, COUNT(f0022) AS "faixa_do_aluguel"
                FROM dbo.pnad2020_month
                GROUP BY
                uf, f0022
                ORDER BY
                faixa_do_aluguel DESC
                ```

                ### Python
                ```python
                fig_1 = make_subplots(rows=2, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}],[{'type':'domain'}, {'type':'domain'}]])
                fig_1.add_trace(go.Pie(labels=faixa_01["Estado"], values=faixa_01["Quantidade"], name="301-600"),
                            1, 1)
                fig_1.add_trace(go.Pie(labels=faixa_02["Estado"], values=faixa_02["Quantidade"], name="801-1.600"),
                            1, 2)
                fig_1.add_trace(go.Pie(labels=faixa_03["Estado"], values=faixa_03["Quantidade"], name="601-800"),
                            2, 1)
                fig_1.add_trace(go.Pie(labels=faixa_04["Estado"], values=faixa_04["Quantidade"], name="101-300"),
                            2, 2)

                # Tamanho do buraco da rosca
                fig_1.update_traces(hole=0.7, hoverinfo="label+value+percent", textinfo='value')

                fig_1.update_layout(title_text="N√∫mero de entrevistados em diferentes faixas de aluguel por estado", title_x=0.5, title=dict(font=dict(size=16)),legend=dict(font=dict(size=14)),
                                    annotations=[dict(text='301-600<br>Reais', x=0.160, y=0.82, font_size=18, showarrow=False),
                                                dict(text='801-1.600<br>Reais', x=0.9, y=0.82, font_size=18, showarrow=False),
                                                dict(text='601-800<br>Reais', x=0.160, y=0.12, font_size=18, showarrow=False),
                                                dict(text='101-300<br>Reais', x=0.9, y=0.12, font_size=18, showarrow=False)
                                                ]
                                    )
                plotly.offline.plot(fig_1, filename = 'br_faixa_aluguel.html', auto_open=False)
                fig_1.show()
                ```
                '''

        if st.button("Carregar Gr√°fico Sociedade 01", type="primary"):
            with st.spinner("Carregando o gr√°fico. Aguarde..."):
                src = "https://cryptohub.com.br/DataFrame/br_faixa_aluguel.html"
                components.iframe(src, width = 700, height = 700, scrolling = False)
                time.sleep(2)
            '''
            
            ## An√°lise

            Pelo gr√°fico, podemos notar que a maioria dos entrevistados que pagam a maior faixa salarial est√£o na regi√£o sudeste e logo em seguida a regi√£o sul e centro-oeste.

            Al√©m disso, a maioria dos entrevistados pagam a faixa de 301-600 reais de aluguel, dentro dos quaia a maioria √© de Minas Gerais.
            '''
        st.divider()
with tab3:
    '''

    ## Em Constru√ß√£o...
    '''
with tab4:
    '''

    ## Refer√™ncias

    1. O IBGE APOIANDO O COMBATE √Ä COVID-19. IBGE, 2023. Dispon√≠vel em: https://covid19.ibge.gov.br/pnad-covid/. Acessado em: 15, outubro de 2023.

    2. KUNIYOSHI, Andre. Plotly Choropleth ‚Äî Interactive Sao Paulo Cities Map. Medium, 2021. Dispon√≠vel em: https://andre-kuniyoshi.medium.com/plotly-choropleth-ainteractive-sao-paulo-cities-map-61089cd7ba2d. Acessado em: 15, outubro de 2023.

    3. BODRUK, Thiago. Brazil GeoJson. Kaggle, 2019. Dispon√≠vel em: https://www.kaggle.com/datasets/thiagobodruk/brazil-geojson. Acessado em: 15, outubro de 2023.

    4. Mapbox Choropleth Maps in Python. Plotly, 2023. Dispon√≠vel em: https://plotly.com/python/mapbox-county-choropleth/. Acessado em: 15, outubro de 2023.
    
    '''